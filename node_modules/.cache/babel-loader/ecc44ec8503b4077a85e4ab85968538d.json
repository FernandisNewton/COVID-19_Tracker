{"ast":null,"code":"import React from\"react\";import numeral from\"numeral\";import{Circle,Popup}from\"react-leaflet\";var casesTypeColors={cases:{hex:\"#CC1034\",rgb:\"rgb(204, 16, 52)\",half_op:\"rgba(204, 16, 52, 0.5)\",multiplier:800},recovered:{hex:\"#7dd71d\",rgb:\"rgb(125, 215, 29)\",half_op:\"rgba(125, 215, 29, 0.5)\",multiplier:1200},deaths:{hex:\"#fb4443\",rgb:\"rgb(251, 68, 67)\",half_op:\"rgba(251, 68, 67, 0.5)\",multiplier:2000}};export var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"cases\";return data.map(function(country){return/*#__PURE__*/React.createElement(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex,fillOpacity:0.4,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier},/*#__PURE__*/React.createElement(Popup,null,/*#__PURE__*/React.createElement(\"div\",{className:\"info-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/React.createElement(\"div\",{className:\"info-name\"},country.country),/*#__PURE__*/React.createElement(\"div\",{className:\"info-confirmed\"},\"Cases: \",numeral(country.cases).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-recovered\"},\"Recovered: \",numeral(country.recovered).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-deaths\"},\"Deaths: \",numeral(country.deaths).format(\"0,0\")))));});};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};","map":{"version":3,"sources":["/home/newtonfernandis/My Projects/covid-19/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","showDataOnMap","data","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format","prettyPrintStat","stat"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,eAA9B,CAEA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,CACLC,GAAG,CAAE,SADA,CAELC,GAAG,CAAE,kBAFA,CAGLC,OAAO,CAAE,wBAHJ,CAILC,UAAU,CAAE,GAJP,CADa,CAOpBC,SAAS,CAAE,CACTJ,GAAG,CAAE,SADI,CAETC,GAAG,CAAE,mBAFI,CAGTC,OAAO,CAAE,yBAHA,CAITC,UAAU,CAAE,IAJH,CAPS,CAapBE,MAAM,CAAE,CACNL,GAAG,CAAE,SADC,CAENC,GAAG,CAAE,kBAFC,CAGNC,OAAO,CAAE,wBAHH,CAINC,UAAU,CAAE,IAJN,CAbY,CAAxB,CAqBA,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,KAAOC,CAAAA,SAAP,2DAAmB,OAAnB,OAC7BD,CAAAA,IAAI,CAACE,GAAL,CAAS,SAACC,OAAD,qBACP,oBAAC,MAAD,EACE,MAAM,CAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV,CAEE,KAAK,CAAEf,eAAe,CAACU,SAAD,CAAf,CAA2BR,GAFpC,CAGE,SAAS,CAAEF,eAAe,CAACU,SAAD,CAAf,CAA2BR,GAHxC,CAIE,WAAW,CAAE,GAJf,CAKE,MAAM,CACJc,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgCV,eAAe,CAACU,SAAD,CAAf,CAA2BL,UAN/D,eASE,oBAAC,KAAD,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BACE,SAAS,CAAC,WADZ,CAEE,KAAK,CAAE,CAAEa,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAjB,CAFT,EADF,cAKE,2BAAK,SAAS,CAAC,WAAf,EAA4BP,OAAO,CAACA,OAApC,CALF,cAME,2BAAK,SAAS,CAAC,gBAAf,YACUf,OAAO,CAACe,OAAO,CAACX,KAAT,CAAP,CAAuBmB,MAAvB,CAA8B,KAA9B,CADV,CANF,cASE,2BAAK,SAAS,CAAC,gBAAf,gBACcvB,OAAO,CAACe,OAAO,CAACN,SAAT,CAAP,CAA2Bc,MAA3B,CAAkC,KAAlC,CADd,CATF,cAYE,2BAAK,SAAS,CAAC,aAAf,aACWvB,OAAO,CAACe,OAAO,CAACL,MAAT,CAAP,CAAwBa,MAAxB,CAA+B,KAA/B,CADX,CAZF,CADF,CATF,CADO,EAAT,CAD6B,EAAtB,CAgCP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAC7BA,CAAAA,IAAI,YAAOzB,OAAO,CAACyB,IAAD,CAAP,CAAcF,MAAd,CAAqB,MAArB,CAAP,EAAwC,IADf,EAAxB","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n    cases: {\n      hex: \"#CC1034\",\n      rgb: \"rgb(204, 16, 52)\",\n      half_op: \"rgba(204, 16, 52, 0.5)\",\n      multiplier: 800,\n    },\n    recovered: {\n      hex: \"#7dd71d\",\n      rgb: \"rgb(125, 215, 29)\",\n      half_op: \"rgba(125, 215, 29, 0.5)\",\n      multiplier: 1200,\n    },\n    deaths: {\n      hex: \"#fb4443\",\n      rgb: \"rgb(251, 68, 67)\",\n      half_op: \"rgba(251, 68, 67, 0.5)\",\n      multiplier: 2000,\n    },\n  };\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\ndata.map((country) => (\n  <Circle\n    center={[country.countryInfo.lat, country.countryInfo.long]}\n    color={casesTypeColors[casesType].hex}\n    fillColor={casesTypeColors[casesType].hex}\n    fillOpacity={0.4}\n    radius={\n      Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n    }\n  >\n    <Popup>\n      <div className=\"info-container\">\n        <div\n          className=\"info-flag\"\n          style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n        ></div>\n        <div className=\"info-name\">{country.country}</div>\n        <div className=\"info-confirmed\">\n          Cases: {numeral(country.cases).format(\"0,0\")}\n        </div>\n        <div className=\"info-recovered\">\n          Recovered: {numeral(country.recovered).format(\"0,0\")}\n        </div>\n        <div className=\"info-deaths\">\n          Deaths: {numeral(country.deaths).format(\"0,0\")}\n        </div>\n      </div>\n    </Popup>\n  </Circle>\n));\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";"]},"metadata":{},"sourceType":"module"}