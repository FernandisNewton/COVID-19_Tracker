{"ast":null,"code":"var _jsxFileName = \"/home/newtonfernandis/My Projects/covid-19/src/util.js\";\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000\n  }\n};\nexport const showDataOnMap = (data, casesType = \"cases\") => data.map(country => /*#__PURE__*/React.createElement(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  fillOpacity: 0.4,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Popup, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-flag\",\n  style: {\n    backgroundImage: `url(${country.countryInfo.flag})`\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}, country.country), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-confirmed\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }\n}, \"Cases: \", numeral(country.cases).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-recovered\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }\n}, \"Recovered: \", numeral(country.recovered).format(\"0,0\")), /*#__PURE__*/React.createElement(\"div\", {\n  className: \"info-deaths\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }\n}, \"Deaths: \", numeral(country.deaths).format(\"0,0\"))))));\nexport const prettyPrintStat = stat => {\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : 'no cases';\n};","map":{"version":3,"sources":["/home/newtonfernandis/My Projects/covid-19/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","showDataOnMap","data","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format","prettyPrintStat","stat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,eAA9B;AAEA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAE,SADA;AAELC,IAAAA,GAAG,EAAE,kBAFA;AAGLC,IAAAA,OAAO,EAAE,wBAHJ;AAILC,IAAAA,UAAU,EAAE;AAJP,GADa;AAOpBC,EAAAA,SAAS,EAAE;AACTJ,IAAAA,GAAG,EAAE,SADI;AAETC,IAAAA,GAAG,EAAE,mBAFI;AAGTC,IAAAA,OAAO,EAAE,yBAHA;AAITC,IAAAA,UAAU,EAAE;AAJH,GAPS;AAapBE,EAAAA,MAAM,EAAE;AACNL,IAAAA,GAAG,EAAE,SADC;AAENC,IAAAA,GAAG,EAAE,kBAFC;AAGNC,IAAAA,OAAO,EAAE,wBAHH;AAINC,IAAAA,UAAU,EAAE;AAJN;AAbY,CAAxB;AAqBA,OAAO,MAAMG,aAAa,GAAG,CAACC,IAAD,EAAOC,SAAS,GAAG,OAAnB,KAC7BD,IAAI,CAACE,GAAL,CAAUC,OAAD,iBACP,oBAAC,MAAD;AACE,EAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV;AAEE,EAAA,KAAK,EAAEf,eAAe,CAACU,SAAD,CAAf,CAA2BR,GAFpC;AAGE,EAAA,SAAS,EAAEF,eAAe,CAACU,SAAD,CAAf,CAA2BR,GAHxC;AAIE,EAAA,WAAW,EAAE,GAJf;AAKE,EAAA,MAAM,EACJc,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCV,eAAe,CAACU,SAAD,CAAf,CAA2BL,UAN/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AACE,EAAA,SAAS,EAAC,WADZ;AAEE,EAAA,KAAK,EAAE;AAAEa,IAAAA,eAAe,EAAG,OAAMN,OAAO,CAACC,WAAR,CAAoBM,IAAK;AAAnD,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAKE;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA4BP,OAAO,CAACA,OAApC,CALF,eAME;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACUf,OAAO,CAACe,OAAO,CAACX,KAAT,CAAP,CAAuBmB,MAAvB,CAA8B,KAA9B,CADV,CANF,eASE;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACcvB,OAAO,CAACe,OAAO,CAACN,SAAT,CAAP,CAA2Bc,MAA3B,CAAkC,KAAlC,CADd,CATF,eAYE;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACWvB,OAAO,CAACe,OAAO,CAACL,MAAT,CAAP,CAAwBa,MAAxB,CAA+B,KAA/B,CADX,CAZF,CADF,CATF,CADF,CADO;AAgCP,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAAS;AACpCA,EAAAA,IAAI,GAAI,IAAGzB,OAAO,CAACyB,IAAD,CAAP,CAAcF,MAAd,CAAqB,MAArB,CAA6B,EAApC,GAAwC,UAA5C;AACH,CAFM","sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n    cases: {\n      hex: \"#CC1034\",\n      rgb: \"rgb(204, 16, 52)\",\n      half_op: \"rgba(204, 16, 52, 0.5)\",\n      multiplier: 800,\n    },\n    recovered: {\n      hex: \"#7dd71d\",\n      rgb: \"rgb(125, 215, 29)\",\n      half_op: \"rgba(125, 215, 29, 0.5)\",\n      multiplier: 1200,\n    },\n    deaths: {\n      hex: \"#fb4443\",\n      rgb: \"rgb(251, 68, 67)\",\n      half_op: \"rgba(251, 68, 67, 0.5)\",\n      multiplier: 2000,\n    },\n  };\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\ndata.map((country) => (\n  <Circle\n    center={[country.countryInfo.lat, country.countryInfo.long]}\n    color={casesTypeColors[casesType].hex}\n    fillColor={casesTypeColors[casesType].hex}\n    fillOpacity={0.4}\n    radius={\n      Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n    }\n  >\n    <Popup>\n      <div className=\"info-container\">\n        <div\n          className=\"info-flag\"\n          style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n        ></div>\n        <div className=\"info-name\">{country.country}</div>\n        <div className=\"info-confirmed\">\n          Cases: {numeral(country.cases).format(\"0,0\")}\n        </div>\n        <div className=\"info-recovered\">\n          Recovered: {numeral(country.recovered).format(\"0,0\")}\n        </div>\n        <div className=\"info-deaths\">\n          Deaths: {numeral(country.deaths).format(\"0,0\")}\n        </div>\n      </div>\n    </Popup>\n  </Circle>\n));\n\nexport const prettyPrintStat = (stat) =>{\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : 'no cases';\n}"]},"metadata":{},"sourceType":"module"}